AI Project Manager Overview
By Zayn Huynh (huyhuynhecom@gmail.com)


Tech Stack:
Overview of my portfolio manager application, the interactive application is implemented using streamlit for simplification and eligible to run in 1 python file compilation with simplified design and focus more on algorithms and logic, the libraries included are yahoo finance API that is crucial for my application for fetching stock’s data, information, price history, market cap, volume, news; streamlit is the web application design responsible for the presentation of the website, perfect for simplification web design especially the sidebar, column representation; for the stock chart is plotted using plotly.graph_objects for presenting the stock chart given stock’s price history using add_trace, portfolio allocation pie using .pie, add indicators which is library from ta for sma and ema 20 also using .add_trace, fear & greed index uses requests to get data from json file from API, panda are used fro tabular data presentation to log transactions, stock holdings with properties, news are fetched by given ticker name and searching for links with the ticker on yahoo finance, market watch, nasdaq, google finance. 


Functionality: 
1) Portfolio:
1) Asset Allocation Pie Chart (plotly.graph_objects using Figure(go.Pie([data set])
Created by using plotly.graph_objects.Pie to allocate current stock holdings in percentage of pie by accessing session_state.portfolio to access current holdings in data set and represent the percentage in pie with labels 


2) Data Holdings Table (streamlit.Dataframe(pandas.dataFrame([{data}])
Created by using Streamlit Data frame with pandas instance.dataFrame of the parsed data set from session_state.portfolio of each stock name, quantity, avg price, current price, P/L, Value of holdings
   Cons: unable to reset real time due to yahoo finance API lag, must click on portfolio section   again to update values


2)Stock Analysis:
1)Stock Chart (plotly.graph_objects using .Scatter for lines and .Candlesticks , indicators are presented using ta.trend.sma/ema_indicator)
Stock chart created by fetching data from yahoo finance price history, each candle stick  is represented by using the time interval depending on the time frame was selected, it would get the open and close price of the interval and graph that candlestick in plotly using .figure(), . add_trace on each candle stick hover is the open,high,low,close all from the data price history of that stock within the interval timeframe, the interval map for each time fram: 1d=1m, 1wk=30m, 1mo-1d, 1y=1wk, max = 1wk. The chart of the stock is interactive, zoom in, zoom out, scale to screen wit full functionality.


CONS: although the data is limited within specific interval of data by yahoo finance API data limitation so on 1wk, 1mo has gaps as disrupted.


        2) Core values 
Use yahoo finance.get to get Market Cap, Volume within the TF, Current Price, Open Price, Close Price, High, Low of TF


        3)Trade Interface Buy/Sell
        For Buy: 
Access st.session_state.cash to validate enough quanitty of stock at current price is viable to buy or not 
If new stock added to portfolio, append new data set to session_state.portfolio


If success: Then decrease cash, increase quantity/create new holding profile of the stock, add transaction log into session_state.transaction_history in data set form using st.dataframe(pandas.dataframe)
If false: fail message


        For Sell:
Access st.session_state.portfolio, get ticker[quantity]  to validate enough quanitty of stock to sell or not


If success: Then increase cash, decrease quantity of the stock, add transaction log into session_state.transaction_history in data set form using st.dataframe(pandas.dataframe)
If fail: fail message
3) News: Accept Ticker Input
If valid ticker: incorporate the ticker name in yahoo finance, nasdaq, market watch, google finance valid links with additional sources in section below by Reuters, Bloomberg, CNBC
If invalid : Recommend valid stock tickers for recommendation.


4) Transaction: After purchase/sell of stocks is logged into transaction_history in data set with specific order type of buy/sell with name, quantity, price bought/sold and value using pandas dataframe table 




Project Evaluation: AI Portfolio Manager gives me valuable insight on my passion of the financial markets, how does stock works, how are orders processed, why data is so crucial especially core values such as market cap, trading volume, key mark prices; together these different usage of the libraries that together create the AI Portfolio Manager.


Future Plans: The reason my project is called AI Portfolio Manager is to incorporate the AI aspect usage in the application through AI LLMs available API usage for customer support responder, stock insights, trading evaluation, current stock trends, etc. These changes are currently being implemented and improved day by day so stay tuned for my fully functional AI Portfolio Manager.